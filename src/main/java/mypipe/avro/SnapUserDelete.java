/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package mypipe.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SnapUserDelete extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6009089855767707920L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SnapUserDelete\",\"namespace\":\"mypipe.avro\",\"fields\":[{\"name\":\"database\",\"type\":\"string\"},{\"name\":\"table\",\"type\":\"string\"},{\"name\":\"tableId\",\"type\":\"int\"},{\"name\":\"txid\",\"type\":[\"null\",{\"type\":\"fixed\",\"name\":\"Guid\",\"size\":16}],\"default\":\"null\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"id\",\"type\":[\"long\",\"null\"]},{\"name\":\"nick_name\",\"type\":[\"string\",\"null\"]},{\"name\":\"head_url\",\"type\":[\"string\",\"null\"]},{\"name\":\"sex\",\"type\":[\"int\",\"null\"]},{\"name\":\"user_sign\",\"type\":[\"string\",\"null\"]},{\"name\":\"platform\",\"type\":[\"int\",\"null\"]},{\"name\":\"create_time\",\"type\":[\"long\",\"null\"]},{\"name\":\"last_update_time\",\"type\":[\"long\",\"null\"]},{\"name\":\"status\",\"type\":[\"int\",\"null\"]},{\"name\":\"profile\",\"type\":[\"string\",\"null\"]},{\"name\":\"weibo_uid\",\"type\":[\"string\",\"null\"]},{\"name\":\"weibo_name\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SnapUserDelete> ENCODER =
      new BinaryMessageEncoder<SnapUserDelete>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SnapUserDelete> DECODER =
      new BinaryMessageDecoder<SnapUserDelete>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SnapUserDelete> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SnapUserDelete> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SnapUserDelete>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SnapUserDelete to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SnapUserDelete from a ByteBuffer. */
  public static SnapUserDelete fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence database;
  @Deprecated public java.lang.CharSequence table;
  @Deprecated public int tableId;
  @Deprecated public mypipe.avro.Guid txid;
  @Deprecated public long timestamp;
  @Deprecated public java.lang.Long id;
  @Deprecated public java.lang.CharSequence nick_name;
  @Deprecated public java.lang.CharSequence head_url;
  @Deprecated public java.lang.Integer sex;
  @Deprecated public java.lang.CharSequence user_sign;
  @Deprecated public java.lang.Integer platform;
  @Deprecated public java.lang.Long create_time;
  @Deprecated public java.lang.Long last_update_time;
  @Deprecated public java.lang.Integer status;
  @Deprecated public java.lang.CharSequence profile;
  @Deprecated public java.lang.CharSequence weibo_uid;
  @Deprecated public java.lang.CharSequence weibo_name;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SnapUserDelete() {}

  /**
   * All-args constructor.
   * @param database The new value for database
   * @param table The new value for table
   * @param tableId The new value for tableId
   * @param txid The new value for txid
   * @param timestamp The new value for timestamp
   * @param id The new value for id
   * @param nick_name The new value for nick_name
   * @param head_url The new value for head_url
   * @param sex The new value for sex
   * @param user_sign The new value for user_sign
   * @param platform The new value for platform
   * @param create_time The new value for create_time
   * @param last_update_time The new value for last_update_time
   * @param status The new value for status
   * @param profile The new value for profile
   * @param weibo_uid The new value for weibo_uid
   * @param weibo_name The new value for weibo_name
   */
  public SnapUserDelete(java.lang.CharSequence database, java.lang.CharSequence table, java.lang.Integer tableId, mypipe.avro.Guid txid, java.lang.Long timestamp, java.lang.Long id, java.lang.CharSequence nick_name, java.lang.CharSequence head_url, java.lang.Integer sex, java.lang.CharSequence user_sign, java.lang.Integer platform, java.lang.Long create_time, java.lang.Long last_update_time, java.lang.Integer status, java.lang.CharSequence profile, java.lang.CharSequence weibo_uid, java.lang.CharSequence weibo_name) {
    this.database = database;
    this.table = table;
    this.tableId = tableId;
    this.txid = txid;
    this.timestamp = timestamp;
    this.id = id;
    this.nick_name = nick_name;
    this.head_url = head_url;
    this.sex = sex;
    this.user_sign = user_sign;
    this.platform = platform;
    this.create_time = create_time;
    this.last_update_time = last_update_time;
    this.status = status;
    this.profile = profile;
    this.weibo_uid = weibo_uid;
    this.weibo_name = weibo_name;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return database;
    case 1: return table;
    case 2: return tableId;
    case 3: return txid;
    case 4: return timestamp;
    case 5: return id;
    case 6: return nick_name;
    case 7: return head_url;
    case 8: return sex;
    case 9: return user_sign;
    case 10: return platform;
    case 11: return create_time;
    case 12: return last_update_time;
    case 13: return status;
    case 14: return profile;
    case 15: return weibo_uid;
    case 16: return weibo_name;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: database = (java.lang.CharSequence)value$; break;
    case 1: table = (java.lang.CharSequence)value$; break;
    case 2: tableId = (java.lang.Integer)value$; break;
    case 3: txid = (mypipe.avro.Guid)value$; break;
    case 4: timestamp = (java.lang.Long)value$; break;
    case 5: id = (java.lang.Long)value$; break;
    case 6: nick_name = (java.lang.CharSequence)value$; break;
    case 7: head_url = (java.lang.CharSequence)value$; break;
    case 8: sex = (java.lang.Integer)value$; break;
    case 9: user_sign = (java.lang.CharSequence)value$; break;
    case 10: platform = (java.lang.Integer)value$; break;
    case 11: create_time = (java.lang.Long)value$; break;
    case 12: last_update_time = (java.lang.Long)value$; break;
    case 13: status = (java.lang.Integer)value$; break;
    case 14: profile = (java.lang.CharSequence)value$; break;
    case 15: weibo_uid = (java.lang.CharSequence)value$; break;
    case 16: weibo_name = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'database' field.
   * @return The value of the 'database' field.
   */
  public java.lang.CharSequence getDatabase() {
    return database;
  }

  /**
   * Sets the value of the 'database' field.
   * @param value the value to set.
   */
  public void setDatabase(java.lang.CharSequence value) {
    this.database = value;
  }

  /**
   * Gets the value of the 'table' field.
   * @return The value of the 'table' field.
   */
  public java.lang.CharSequence getTable() {
    return table;
  }

  /**
   * Sets the value of the 'table' field.
   * @param value the value to set.
   */
  public void setTable(java.lang.CharSequence value) {
    this.table = value;
  }

  /**
   * Gets the value of the 'tableId' field.
   * @return The value of the 'tableId' field.
   */
  public java.lang.Integer getTableId() {
    return tableId;
  }

  /**
   * Sets the value of the 'tableId' field.
   * @param value the value to set.
   */
  public void setTableId(java.lang.Integer value) {
    this.tableId = value;
  }

  /**
   * Gets the value of the 'txid' field.
   * @return The value of the 'txid' field.
   */
  public mypipe.avro.Guid getTxid() {
    return txid;
  }

  /**
   * Sets the value of the 'txid' field.
   * @param value the value to set.
   */
  public void setTxid(mypipe.avro.Guid value) {
    this.txid = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'nick_name' field.
   * @return The value of the 'nick_name' field.
   */
  public java.lang.CharSequence getNickName() {
    return nick_name;
  }

  /**
   * Sets the value of the 'nick_name' field.
   * @param value the value to set.
   */
  public void setNickName(java.lang.CharSequence value) {
    this.nick_name = value;
  }

  /**
   * Gets the value of the 'head_url' field.
   * @return The value of the 'head_url' field.
   */
  public java.lang.CharSequence getHeadUrl() {
    return head_url;
  }

  /**
   * Sets the value of the 'head_url' field.
   * @param value the value to set.
   */
  public void setHeadUrl(java.lang.CharSequence value) {
    this.head_url = value;
  }

  /**
   * Gets the value of the 'sex' field.
   * @return The value of the 'sex' field.
   */
  public java.lang.Integer getSex() {
    return sex;
  }

  /**
   * Sets the value of the 'sex' field.
   * @param value the value to set.
   */
  public void setSex(java.lang.Integer value) {
    this.sex = value;
  }

  /**
   * Gets the value of the 'user_sign' field.
   * @return The value of the 'user_sign' field.
   */
  public java.lang.CharSequence getUserSign() {
    return user_sign;
  }

  /**
   * Sets the value of the 'user_sign' field.
   * @param value the value to set.
   */
  public void setUserSign(java.lang.CharSequence value) {
    this.user_sign = value;
  }

  /**
   * Gets the value of the 'platform' field.
   * @return The value of the 'platform' field.
   */
  public java.lang.Integer getPlatform() {
    return platform;
  }

  /**
   * Sets the value of the 'platform' field.
   * @param value the value to set.
   */
  public void setPlatform(java.lang.Integer value) {
    this.platform = value;
  }

  /**
   * Gets the value of the 'create_time' field.
   * @return The value of the 'create_time' field.
   */
  public java.lang.Long getCreateTime() {
    return create_time;
  }

  /**
   * Sets the value of the 'create_time' field.
   * @param value the value to set.
   */
  public void setCreateTime(java.lang.Long value) {
    this.create_time = value;
  }

  /**
   * Gets the value of the 'last_update_time' field.
   * @return The value of the 'last_update_time' field.
   */
  public java.lang.Long getLastUpdateTime() {
    return last_update_time;
  }

  /**
   * Sets the value of the 'last_update_time' field.
   * @param value the value to set.
   */
  public void setLastUpdateTime(java.lang.Long value) {
    this.last_update_time = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.Integer getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.Integer value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'profile' field.
   * @return The value of the 'profile' field.
   */
  public java.lang.CharSequence getProfile() {
    return profile;
  }

  /**
   * Sets the value of the 'profile' field.
   * @param value the value to set.
   */
  public void setProfile(java.lang.CharSequence value) {
    this.profile = value;
  }

  /**
   * Gets the value of the 'weibo_uid' field.
   * @return The value of the 'weibo_uid' field.
   */
  public java.lang.CharSequence getWeiboUid() {
    return weibo_uid;
  }

  /**
   * Sets the value of the 'weibo_uid' field.
   * @param value the value to set.
   */
  public void setWeiboUid(java.lang.CharSequence value) {
    this.weibo_uid = value;
  }

  /**
   * Gets the value of the 'weibo_name' field.
   * @return The value of the 'weibo_name' field.
   */
  public java.lang.CharSequence getWeiboName() {
    return weibo_name;
  }

  /**
   * Sets the value of the 'weibo_name' field.
   * @param value the value to set.
   */
  public void setWeiboName(java.lang.CharSequence value) {
    this.weibo_name = value;
  }

  /**
   * Creates a new SnapUserDelete RecordBuilder.
   * @return A new SnapUserDelete RecordBuilder
   */
  public static mypipe.avro.SnapUserDelete.Builder newBuilder() {
    return new mypipe.avro.SnapUserDelete.Builder();
  }

  /**
   * Creates a new SnapUserDelete RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SnapUserDelete RecordBuilder
   */
  public static mypipe.avro.SnapUserDelete.Builder newBuilder(mypipe.avro.SnapUserDelete.Builder other) {
    return new mypipe.avro.SnapUserDelete.Builder(other);
  }

  /**
   * Creates a new SnapUserDelete RecordBuilder by copying an existing SnapUserDelete instance.
   * @param other The existing instance to copy.
   * @return A new SnapUserDelete RecordBuilder
   */
  public static mypipe.avro.SnapUserDelete.Builder newBuilder(mypipe.avro.SnapUserDelete other) {
    return new mypipe.avro.SnapUserDelete.Builder(other);
  }

  /**
   * RecordBuilder for SnapUserDelete instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SnapUserDelete>
    implements org.apache.avro.data.RecordBuilder<SnapUserDelete> {

    private java.lang.CharSequence database;
    private java.lang.CharSequence table;
    private int tableId;
    private mypipe.avro.Guid txid;
    private long timestamp;
    private java.lang.Long id;
    private java.lang.CharSequence nick_name;
    private java.lang.CharSequence head_url;
    private java.lang.Integer sex;
    private java.lang.CharSequence user_sign;
    private java.lang.Integer platform;
    private java.lang.Long create_time;
    private java.lang.Long last_update_time;
    private java.lang.Integer status;
    private java.lang.CharSequence profile;
    private java.lang.CharSequence weibo_uid;
    private java.lang.CharSequence weibo_name;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(mypipe.avro.SnapUserDelete.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.database)) {
        this.database = data().deepCopy(fields()[0].schema(), other.database);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.table)) {
        this.table = data().deepCopy(fields()[1].schema(), other.table);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tableId)) {
        this.tableId = data().deepCopy(fields()[2].schema(), other.tableId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.txid)) {
        this.txid = data().deepCopy(fields()[3].schema(), other.txid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.id)) {
        this.id = data().deepCopy(fields()[5].schema(), other.id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.nick_name)) {
        this.nick_name = data().deepCopy(fields()[6].schema(), other.nick_name);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.head_url)) {
        this.head_url = data().deepCopy(fields()[7].schema(), other.head_url);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sex)) {
        this.sex = data().deepCopy(fields()[8].schema(), other.sex);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.user_sign)) {
        this.user_sign = data().deepCopy(fields()[9].schema(), other.user_sign);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.platform)) {
        this.platform = data().deepCopy(fields()[10].schema(), other.platform);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.create_time)) {
        this.create_time = data().deepCopy(fields()[11].schema(), other.create_time);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.last_update_time)) {
        this.last_update_time = data().deepCopy(fields()[12].schema(), other.last_update_time);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.status)) {
        this.status = data().deepCopy(fields()[13].schema(), other.status);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.profile)) {
        this.profile = data().deepCopy(fields()[14].schema(), other.profile);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.weibo_uid)) {
        this.weibo_uid = data().deepCopy(fields()[15].schema(), other.weibo_uid);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.weibo_name)) {
        this.weibo_name = data().deepCopy(fields()[16].schema(), other.weibo_name);
        fieldSetFlags()[16] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SnapUserDelete instance
     * @param other The existing instance to copy.
     */
    private Builder(mypipe.avro.SnapUserDelete other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.database)) {
        this.database = data().deepCopy(fields()[0].schema(), other.database);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.table)) {
        this.table = data().deepCopy(fields()[1].schema(), other.table);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tableId)) {
        this.tableId = data().deepCopy(fields()[2].schema(), other.tableId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.txid)) {
        this.txid = data().deepCopy(fields()[3].schema(), other.txid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.id)) {
        this.id = data().deepCopy(fields()[5].schema(), other.id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.nick_name)) {
        this.nick_name = data().deepCopy(fields()[6].schema(), other.nick_name);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.head_url)) {
        this.head_url = data().deepCopy(fields()[7].schema(), other.head_url);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sex)) {
        this.sex = data().deepCopy(fields()[8].schema(), other.sex);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.user_sign)) {
        this.user_sign = data().deepCopy(fields()[9].schema(), other.user_sign);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.platform)) {
        this.platform = data().deepCopy(fields()[10].schema(), other.platform);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.create_time)) {
        this.create_time = data().deepCopy(fields()[11].schema(), other.create_time);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.last_update_time)) {
        this.last_update_time = data().deepCopy(fields()[12].schema(), other.last_update_time);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.status)) {
        this.status = data().deepCopy(fields()[13].schema(), other.status);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.profile)) {
        this.profile = data().deepCopy(fields()[14].schema(), other.profile);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.weibo_uid)) {
        this.weibo_uid = data().deepCopy(fields()[15].schema(), other.weibo_uid);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.weibo_name)) {
        this.weibo_name = data().deepCopy(fields()[16].schema(), other.weibo_name);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'database' field.
      * @return The value.
      */
    public java.lang.CharSequence getDatabase() {
      return database;
    }

    /**
      * Sets the value of the 'database' field.
      * @param value The value of 'database'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setDatabase(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.database = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'database' field has been set.
      * @return True if the 'database' field has been set, false otherwise.
      */
    public boolean hasDatabase() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'database' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearDatabase() {
      database = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'table' field.
      * @return The value.
      */
    public java.lang.CharSequence getTable() {
      return table;
    }

    /**
      * Sets the value of the 'table' field.
      * @param value The value of 'table'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setTable(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.table = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'table' field has been set.
      * @return True if the 'table' field has been set, false otherwise.
      */
    public boolean hasTable() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'table' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearTable() {
      table = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'tableId' field.
      * @return The value.
      */
    public java.lang.Integer getTableId() {
      return tableId;
    }

    /**
      * Sets the value of the 'tableId' field.
      * @param value The value of 'tableId'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setTableId(int value) {
      validate(fields()[2], value);
      this.tableId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'tableId' field has been set.
      * @return True if the 'tableId' field has been set, false otherwise.
      */
    public boolean hasTableId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'tableId' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearTableId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'txid' field.
      * @return The value.
      */
    public mypipe.avro.Guid getTxid() {
      return txid;
    }

    /**
      * Sets the value of the 'txid' field.
      * @param value The value of 'txid'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setTxid(mypipe.avro.Guid value) {
      validate(fields()[3], value);
      this.txid = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'txid' field has been set.
      * @return True if the 'txid' field has been set, false otherwise.
      */
    public boolean hasTxid() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'txid' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearTxid() {
      txid = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setTimestamp(long value) {
      validate(fields()[4], value);
      this.timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearTimestamp() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setId(java.lang.Long value) {
      validate(fields()[5], value);
      this.id = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearId() {
      id = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'nick_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getNickName() {
      return nick_name;
    }

    /**
      * Sets the value of the 'nick_name' field.
      * @param value The value of 'nick_name'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setNickName(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.nick_name = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'nick_name' field has been set.
      * @return True if the 'nick_name' field has been set, false otherwise.
      */
    public boolean hasNickName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'nick_name' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearNickName() {
      nick_name = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'head_url' field.
      * @return The value.
      */
    public java.lang.CharSequence getHeadUrl() {
      return head_url;
    }

    /**
      * Sets the value of the 'head_url' field.
      * @param value The value of 'head_url'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setHeadUrl(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.head_url = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'head_url' field has been set.
      * @return True if the 'head_url' field has been set, false otherwise.
      */
    public boolean hasHeadUrl() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'head_url' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearHeadUrl() {
      head_url = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'sex' field.
      * @return The value.
      */
    public java.lang.Integer getSex() {
      return sex;
    }

    /**
      * Sets the value of the 'sex' field.
      * @param value The value of 'sex'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setSex(java.lang.Integer value) {
      validate(fields()[8], value);
      this.sex = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'sex' field has been set.
      * @return True if the 'sex' field has been set, false otherwise.
      */
    public boolean hasSex() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'sex' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearSex() {
      sex = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_sign' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserSign() {
      return user_sign;
    }

    /**
      * Sets the value of the 'user_sign' field.
      * @param value The value of 'user_sign'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setUserSign(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.user_sign = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'user_sign' field has been set.
      * @return True if the 'user_sign' field has been set, false otherwise.
      */
    public boolean hasUserSign() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'user_sign' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearUserSign() {
      user_sign = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'platform' field.
      * @return The value.
      */
    public java.lang.Integer getPlatform() {
      return platform;
    }

    /**
      * Sets the value of the 'platform' field.
      * @param value The value of 'platform'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setPlatform(java.lang.Integer value) {
      validate(fields()[10], value);
      this.platform = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'platform' field has been set.
      * @return True if the 'platform' field has been set, false otherwise.
      */
    public boolean hasPlatform() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'platform' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearPlatform() {
      platform = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'create_time' field.
      * @return The value.
      */
    public java.lang.Long getCreateTime() {
      return create_time;
    }

    /**
      * Sets the value of the 'create_time' field.
      * @param value The value of 'create_time'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setCreateTime(java.lang.Long value) {
      validate(fields()[11], value);
      this.create_time = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'create_time' field has been set.
      * @return True if the 'create_time' field has been set, false otherwise.
      */
    public boolean hasCreateTime() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'create_time' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearCreateTime() {
      create_time = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'last_update_time' field.
      * @return The value.
      */
    public java.lang.Long getLastUpdateTime() {
      return last_update_time;
    }

    /**
      * Sets the value of the 'last_update_time' field.
      * @param value The value of 'last_update_time'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setLastUpdateTime(java.lang.Long value) {
      validate(fields()[12], value);
      this.last_update_time = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'last_update_time' field has been set.
      * @return True if the 'last_update_time' field has been set, false otherwise.
      */
    public boolean hasLastUpdateTime() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'last_update_time' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearLastUpdateTime() {
      last_update_time = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.Integer getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setStatus(java.lang.Integer value) {
      validate(fields()[13], value);
      this.status = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearStatus() {
      status = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfile() {
      return profile;
    }

    /**
      * Sets the value of the 'profile' field.
      * @param value The value of 'profile'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setProfile(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.profile = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'profile' field has been set.
      * @return True if the 'profile' field has been set, false otherwise.
      */
    public boolean hasProfile() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'profile' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearProfile() {
      profile = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'weibo_uid' field.
      * @return The value.
      */
    public java.lang.CharSequence getWeiboUid() {
      return weibo_uid;
    }

    /**
      * Sets the value of the 'weibo_uid' field.
      * @param value The value of 'weibo_uid'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setWeiboUid(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.weibo_uid = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'weibo_uid' field has been set.
      * @return True if the 'weibo_uid' field has been set, false otherwise.
      */
    public boolean hasWeiboUid() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'weibo_uid' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearWeiboUid() {
      weibo_uid = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'weibo_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getWeiboName() {
      return weibo_name;
    }

    /**
      * Sets the value of the 'weibo_name' field.
      * @param value The value of 'weibo_name'.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder setWeiboName(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.weibo_name = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'weibo_name' field has been set.
      * @return True if the 'weibo_name' field has been set, false otherwise.
      */
    public boolean hasWeiboName() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'weibo_name' field.
      * @return This builder.
      */
    public mypipe.avro.SnapUserDelete.Builder clearWeiboName() {
      weibo_name = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SnapUserDelete build() {
      try {
        SnapUserDelete record = new SnapUserDelete();
        record.database = fieldSetFlags()[0] ? this.database : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.table = fieldSetFlags()[1] ? this.table : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.tableId = fieldSetFlags()[2] ? this.tableId : (java.lang.Integer) defaultValue(fields()[2]);
        record.txid = fieldSetFlags()[3] ? this.txid : (mypipe.avro.Guid) defaultValue(fields()[3]);
        record.timestamp = fieldSetFlags()[4] ? this.timestamp : (java.lang.Long) defaultValue(fields()[4]);
        record.id = fieldSetFlags()[5] ? this.id : (java.lang.Long) defaultValue(fields()[5]);
        record.nick_name = fieldSetFlags()[6] ? this.nick_name : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.head_url = fieldSetFlags()[7] ? this.head_url : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.sex = fieldSetFlags()[8] ? this.sex : (java.lang.Integer) defaultValue(fields()[8]);
        record.user_sign = fieldSetFlags()[9] ? this.user_sign : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.platform = fieldSetFlags()[10] ? this.platform : (java.lang.Integer) defaultValue(fields()[10]);
        record.create_time = fieldSetFlags()[11] ? this.create_time : (java.lang.Long) defaultValue(fields()[11]);
        record.last_update_time = fieldSetFlags()[12] ? this.last_update_time : (java.lang.Long) defaultValue(fields()[12]);
        record.status = fieldSetFlags()[13] ? this.status : (java.lang.Integer) defaultValue(fields()[13]);
        record.profile = fieldSetFlags()[14] ? this.profile : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.weibo_uid = fieldSetFlags()[15] ? this.weibo_uid : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.weibo_name = fieldSetFlags()[16] ? this.weibo_name : (java.lang.CharSequence) defaultValue(fields()[16]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SnapUserDelete>
    WRITER$ = (org.apache.avro.io.DatumWriter<SnapUserDelete>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SnapUserDelete>
    READER$ = (org.apache.avro.io.DatumReader<SnapUserDelete>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
