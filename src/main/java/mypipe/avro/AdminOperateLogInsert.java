/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package mypipe.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AdminOperateLogInsert extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4677181556952633650L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AdminOperateLogInsert\",\"namespace\":\"mypipe.avro\",\"fields\":[{\"name\":\"database\",\"type\":\"string\"},{\"name\":\"table\",\"type\":\"string\"},{\"name\":\"tableId\",\"type\":\"int\"},{\"name\":\"txid\",\"type\":[\"null\",{\"type\":\"fixed\",\"name\":\"Guid\",\"size\":16}],\"default\":\"null\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"id\",\"type\":[\"long\",\"null\"]},{\"name\":\"obj_id\",\"type\":[\"long\",\"null\"]},{\"name\":\"obj_type\",\"type\":[\"int\",\"null\"]},{\"name\":\"operater_id\",\"type\":[\"long\",\"null\"]},{\"name\":\"deal_time\",\"type\":[\"long\",\"null\"]},{\"name\":\"action_type\",\"type\":[\"int\",\"null\"]},{\"name\":\"action_reason\",\"type\":[\"int\",\"null\"]},{\"name\":\"remarks\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AdminOperateLogInsert> ENCODER =
      new BinaryMessageEncoder<AdminOperateLogInsert>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AdminOperateLogInsert> DECODER =
      new BinaryMessageDecoder<AdminOperateLogInsert>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AdminOperateLogInsert> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AdminOperateLogInsert> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AdminOperateLogInsert>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AdminOperateLogInsert to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AdminOperateLogInsert from a ByteBuffer. */
  public static AdminOperateLogInsert fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence database;
  @Deprecated public java.lang.CharSequence table;
  @Deprecated public int tableId;
  @Deprecated public mypipe.avro.Guid txid;
  @Deprecated public long timestamp;
  @Deprecated public java.lang.Long id;
  @Deprecated public java.lang.Long obj_id;
  @Deprecated public java.lang.Integer obj_type;
  @Deprecated public java.lang.Long operater_id;
  @Deprecated public java.lang.Long deal_time;
  @Deprecated public java.lang.Integer action_type;
  @Deprecated public java.lang.Integer action_reason;
  @Deprecated public java.lang.CharSequence remarks;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AdminOperateLogInsert() {}

  /**
   * All-args constructor.
   * @param database The new value for database
   * @param table The new value for table
   * @param tableId The new value for tableId
   * @param txid The new value for txid
   * @param timestamp The new value for timestamp
   * @param id The new value for id
   * @param obj_id The new value for obj_id
   * @param obj_type The new value for obj_type
   * @param operater_id The new value for operater_id
   * @param deal_time The new value for deal_time
   * @param action_type The new value for action_type
   * @param action_reason The new value for action_reason
   * @param remarks The new value for remarks
   */
  public AdminOperateLogInsert(java.lang.CharSequence database, java.lang.CharSequence table, java.lang.Integer tableId, mypipe.avro.Guid txid, java.lang.Long timestamp, java.lang.Long id, java.lang.Long obj_id, java.lang.Integer obj_type, java.lang.Long operater_id, java.lang.Long deal_time, java.lang.Integer action_type, java.lang.Integer action_reason, java.lang.CharSequence remarks) {
    this.database = database;
    this.table = table;
    this.tableId = tableId;
    this.txid = txid;
    this.timestamp = timestamp;
    this.id = id;
    this.obj_id = obj_id;
    this.obj_type = obj_type;
    this.operater_id = operater_id;
    this.deal_time = deal_time;
    this.action_type = action_type;
    this.action_reason = action_reason;
    this.remarks = remarks;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return database;
    case 1: return table;
    case 2: return tableId;
    case 3: return txid;
    case 4: return timestamp;
    case 5: return id;
    case 6: return obj_id;
    case 7: return obj_type;
    case 8: return operater_id;
    case 9: return deal_time;
    case 10: return action_type;
    case 11: return action_reason;
    case 12: return remarks;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: database = (java.lang.CharSequence)value$; break;
    case 1: table = (java.lang.CharSequence)value$; break;
    case 2: tableId = (java.lang.Integer)value$; break;
    case 3: txid = (mypipe.avro.Guid)value$; break;
    case 4: timestamp = (java.lang.Long)value$; break;
    case 5: id = (java.lang.Long)value$; break;
    case 6: obj_id = (java.lang.Long)value$; break;
    case 7: obj_type = (java.lang.Integer)value$; break;
    case 8: operater_id = (java.lang.Long)value$; break;
    case 9: deal_time = (java.lang.Long)value$; break;
    case 10: action_type = (java.lang.Integer)value$; break;
    case 11: action_reason = (java.lang.Integer)value$; break;
    case 12: remarks = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'database' field.
   * @return The value of the 'database' field.
   */
  public java.lang.CharSequence getDatabase() {
    return database;
  }

  /**
   * Sets the value of the 'database' field.
   * @param value the value to set.
   */
  public void setDatabase(java.lang.CharSequence value) {
    this.database = value;
  }

  /**
   * Gets the value of the 'table' field.
   * @return The value of the 'table' field.
   */
  public java.lang.CharSequence getTable() {
    return table;
  }

  /**
   * Sets the value of the 'table' field.
   * @param value the value to set.
   */
  public void setTable(java.lang.CharSequence value) {
    this.table = value;
  }

  /**
   * Gets the value of the 'tableId' field.
   * @return The value of the 'tableId' field.
   */
  public java.lang.Integer getTableId() {
    return tableId;
  }

  /**
   * Sets the value of the 'tableId' field.
   * @param value the value to set.
   */
  public void setTableId(java.lang.Integer value) {
    this.tableId = value;
  }

  /**
   * Gets the value of the 'txid' field.
   * @return The value of the 'txid' field.
   */
  public mypipe.avro.Guid getTxid() {
    return txid;
  }

  /**
   * Sets the value of the 'txid' field.
   * @param value the value to set.
   */
  public void setTxid(mypipe.avro.Guid value) {
    this.txid = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'obj_id' field.
   * @return The value of the 'obj_id' field.
   */
  public java.lang.Long getObjId() {
    return obj_id;
  }

  /**
   * Sets the value of the 'obj_id' field.
   * @param value the value to set.
   */
  public void setObjId(java.lang.Long value) {
    this.obj_id = value;
  }

  /**
   * Gets the value of the 'obj_type' field.
   * @return The value of the 'obj_type' field.
   */
  public java.lang.Integer getObjType() {
    return obj_type;
  }

  /**
   * Sets the value of the 'obj_type' field.
   * @param value the value to set.
   */
  public void setObjType(java.lang.Integer value) {
    this.obj_type = value;
  }

  /**
   * Gets the value of the 'operater_id' field.
   * @return The value of the 'operater_id' field.
   */
  public java.lang.Long getOperaterId() {
    return operater_id;
  }

  /**
   * Sets the value of the 'operater_id' field.
   * @param value the value to set.
   */
  public void setOperaterId(java.lang.Long value) {
    this.operater_id = value;
  }

  /**
   * Gets the value of the 'deal_time' field.
   * @return The value of the 'deal_time' field.
   */
  public java.lang.Long getDealTime() {
    return deal_time;
  }

  /**
   * Sets the value of the 'deal_time' field.
   * @param value the value to set.
   */
  public void setDealTime(java.lang.Long value) {
    this.deal_time = value;
  }

  /**
   * Gets the value of the 'action_type' field.
   * @return The value of the 'action_type' field.
   */
  public java.lang.Integer getActionType() {
    return action_type;
  }

  /**
   * Sets the value of the 'action_type' field.
   * @param value the value to set.
   */
  public void setActionType(java.lang.Integer value) {
    this.action_type = value;
  }

  /**
   * Gets the value of the 'action_reason' field.
   * @return The value of the 'action_reason' field.
   */
  public java.lang.Integer getActionReason() {
    return action_reason;
  }

  /**
   * Sets the value of the 'action_reason' field.
   * @param value the value to set.
   */
  public void setActionReason(java.lang.Integer value) {
    this.action_reason = value;
  }

  /**
   * Gets the value of the 'remarks' field.
   * @return The value of the 'remarks' field.
   */
  public java.lang.CharSequence getRemarks() {
    return remarks;
  }

  /**
   * Sets the value of the 'remarks' field.
   * @param value the value to set.
   */
  public void setRemarks(java.lang.CharSequence value) {
    this.remarks = value;
  }

  /**
   * Creates a new AdminOperateLogInsert RecordBuilder.
   * @return A new AdminOperateLogInsert RecordBuilder
   */
  public static mypipe.avro.AdminOperateLogInsert.Builder newBuilder() {
    return new mypipe.avro.AdminOperateLogInsert.Builder();
  }

  /**
   * Creates a new AdminOperateLogInsert RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AdminOperateLogInsert RecordBuilder
   */
  public static mypipe.avro.AdminOperateLogInsert.Builder newBuilder(mypipe.avro.AdminOperateLogInsert.Builder other) {
    return new mypipe.avro.AdminOperateLogInsert.Builder(other);
  }

  /**
   * Creates a new AdminOperateLogInsert RecordBuilder by copying an existing AdminOperateLogInsert instance.
   * @param other The existing instance to copy.
   * @return A new AdminOperateLogInsert RecordBuilder
   */
  public static mypipe.avro.AdminOperateLogInsert.Builder newBuilder(mypipe.avro.AdminOperateLogInsert other) {
    return new mypipe.avro.AdminOperateLogInsert.Builder(other);
  }

  /**
   * RecordBuilder for AdminOperateLogInsert instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AdminOperateLogInsert>
    implements org.apache.avro.data.RecordBuilder<AdminOperateLogInsert> {

    private java.lang.CharSequence database;
    private java.lang.CharSequence table;
    private int tableId;
    private mypipe.avro.Guid txid;
    private long timestamp;
    private java.lang.Long id;
    private java.lang.Long obj_id;
    private java.lang.Integer obj_type;
    private java.lang.Long operater_id;
    private java.lang.Long deal_time;
    private java.lang.Integer action_type;
    private java.lang.Integer action_reason;
    private java.lang.CharSequence remarks;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(mypipe.avro.AdminOperateLogInsert.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.database)) {
        this.database = data().deepCopy(fields()[0].schema(), other.database);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.table)) {
        this.table = data().deepCopy(fields()[1].schema(), other.table);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tableId)) {
        this.tableId = data().deepCopy(fields()[2].schema(), other.tableId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.txid)) {
        this.txid = data().deepCopy(fields()[3].schema(), other.txid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.id)) {
        this.id = data().deepCopy(fields()[5].schema(), other.id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.obj_id)) {
        this.obj_id = data().deepCopy(fields()[6].schema(), other.obj_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.obj_type)) {
        this.obj_type = data().deepCopy(fields()[7].schema(), other.obj_type);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.operater_id)) {
        this.operater_id = data().deepCopy(fields()[8].schema(), other.operater_id);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.deal_time)) {
        this.deal_time = data().deepCopy(fields()[9].schema(), other.deal_time);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.action_type)) {
        this.action_type = data().deepCopy(fields()[10].schema(), other.action_type);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.action_reason)) {
        this.action_reason = data().deepCopy(fields()[11].schema(), other.action_reason);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.remarks)) {
        this.remarks = data().deepCopy(fields()[12].schema(), other.remarks);
        fieldSetFlags()[12] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AdminOperateLogInsert instance
     * @param other The existing instance to copy.
     */
    private Builder(mypipe.avro.AdminOperateLogInsert other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.database)) {
        this.database = data().deepCopy(fields()[0].schema(), other.database);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.table)) {
        this.table = data().deepCopy(fields()[1].schema(), other.table);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tableId)) {
        this.tableId = data().deepCopy(fields()[2].schema(), other.tableId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.txid)) {
        this.txid = data().deepCopy(fields()[3].schema(), other.txid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.id)) {
        this.id = data().deepCopy(fields()[5].schema(), other.id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.obj_id)) {
        this.obj_id = data().deepCopy(fields()[6].schema(), other.obj_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.obj_type)) {
        this.obj_type = data().deepCopy(fields()[7].schema(), other.obj_type);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.operater_id)) {
        this.operater_id = data().deepCopy(fields()[8].schema(), other.operater_id);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.deal_time)) {
        this.deal_time = data().deepCopy(fields()[9].schema(), other.deal_time);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.action_type)) {
        this.action_type = data().deepCopy(fields()[10].schema(), other.action_type);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.action_reason)) {
        this.action_reason = data().deepCopy(fields()[11].schema(), other.action_reason);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.remarks)) {
        this.remarks = data().deepCopy(fields()[12].schema(), other.remarks);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'database' field.
      * @return The value.
      */
    public java.lang.CharSequence getDatabase() {
      return database;
    }

    /**
      * Sets the value of the 'database' field.
      * @param value The value of 'database'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setDatabase(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.database = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'database' field has been set.
      * @return True if the 'database' field has been set, false otherwise.
      */
    public boolean hasDatabase() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'database' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearDatabase() {
      database = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'table' field.
      * @return The value.
      */
    public java.lang.CharSequence getTable() {
      return table;
    }

    /**
      * Sets the value of the 'table' field.
      * @param value The value of 'table'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setTable(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.table = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'table' field has been set.
      * @return True if the 'table' field has been set, false otherwise.
      */
    public boolean hasTable() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'table' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearTable() {
      table = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'tableId' field.
      * @return The value.
      */
    public java.lang.Integer getTableId() {
      return tableId;
    }

    /**
      * Sets the value of the 'tableId' field.
      * @param value The value of 'tableId'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setTableId(int value) {
      validate(fields()[2], value);
      this.tableId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'tableId' field has been set.
      * @return True if the 'tableId' field has been set, false otherwise.
      */
    public boolean hasTableId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'tableId' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearTableId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'txid' field.
      * @return The value.
      */
    public mypipe.avro.Guid getTxid() {
      return txid;
    }

    /**
      * Sets the value of the 'txid' field.
      * @param value The value of 'txid'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setTxid(mypipe.avro.Guid value) {
      validate(fields()[3], value);
      this.txid = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'txid' field has been set.
      * @return True if the 'txid' field has been set, false otherwise.
      */
    public boolean hasTxid() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'txid' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearTxid() {
      txid = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setTimestamp(long value) {
      validate(fields()[4], value);
      this.timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearTimestamp() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setId(java.lang.Long value) {
      validate(fields()[5], value);
      this.id = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearId() {
      id = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'obj_id' field.
      * @return The value.
      */
    public java.lang.Long getObjId() {
      return obj_id;
    }

    /**
      * Sets the value of the 'obj_id' field.
      * @param value The value of 'obj_id'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setObjId(java.lang.Long value) {
      validate(fields()[6], value);
      this.obj_id = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'obj_id' field has been set.
      * @return True if the 'obj_id' field has been set, false otherwise.
      */
    public boolean hasObjId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'obj_id' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearObjId() {
      obj_id = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'obj_type' field.
      * @return The value.
      */
    public java.lang.Integer getObjType() {
      return obj_type;
    }

    /**
      * Sets the value of the 'obj_type' field.
      * @param value The value of 'obj_type'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setObjType(java.lang.Integer value) {
      validate(fields()[7], value);
      this.obj_type = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'obj_type' field has been set.
      * @return True if the 'obj_type' field has been set, false otherwise.
      */
    public boolean hasObjType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'obj_type' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearObjType() {
      obj_type = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'operater_id' field.
      * @return The value.
      */
    public java.lang.Long getOperaterId() {
      return operater_id;
    }

    /**
      * Sets the value of the 'operater_id' field.
      * @param value The value of 'operater_id'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setOperaterId(java.lang.Long value) {
      validate(fields()[8], value);
      this.operater_id = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'operater_id' field has been set.
      * @return True if the 'operater_id' field has been set, false otherwise.
      */
    public boolean hasOperaterId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'operater_id' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearOperaterId() {
      operater_id = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'deal_time' field.
      * @return The value.
      */
    public java.lang.Long getDealTime() {
      return deal_time;
    }

    /**
      * Sets the value of the 'deal_time' field.
      * @param value The value of 'deal_time'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setDealTime(java.lang.Long value) {
      validate(fields()[9], value);
      this.deal_time = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'deal_time' field has been set.
      * @return True if the 'deal_time' field has been set, false otherwise.
      */
    public boolean hasDealTime() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'deal_time' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearDealTime() {
      deal_time = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'action_type' field.
      * @return The value.
      */
    public java.lang.Integer getActionType() {
      return action_type;
    }

    /**
      * Sets the value of the 'action_type' field.
      * @param value The value of 'action_type'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setActionType(java.lang.Integer value) {
      validate(fields()[10], value);
      this.action_type = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'action_type' field has been set.
      * @return True if the 'action_type' field has been set, false otherwise.
      */
    public boolean hasActionType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'action_type' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearActionType() {
      action_type = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'action_reason' field.
      * @return The value.
      */
    public java.lang.Integer getActionReason() {
      return action_reason;
    }

    /**
      * Sets the value of the 'action_reason' field.
      * @param value The value of 'action_reason'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setActionReason(java.lang.Integer value) {
      validate(fields()[11], value);
      this.action_reason = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'action_reason' field has been set.
      * @return True if the 'action_reason' field has been set, false otherwise.
      */
    public boolean hasActionReason() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'action_reason' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearActionReason() {
      action_reason = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'remarks' field.
      * @return The value.
      */
    public java.lang.CharSequence getRemarks() {
      return remarks;
    }

    /**
      * Sets the value of the 'remarks' field.
      * @param value The value of 'remarks'.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder setRemarks(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.remarks = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'remarks' field has been set.
      * @return True if the 'remarks' field has been set, false otherwise.
      */
    public boolean hasRemarks() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'remarks' field.
      * @return This builder.
      */
    public mypipe.avro.AdminOperateLogInsert.Builder clearRemarks() {
      remarks = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AdminOperateLogInsert build() {
      try {
        AdminOperateLogInsert record = new AdminOperateLogInsert();
        record.database = fieldSetFlags()[0] ? this.database : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.table = fieldSetFlags()[1] ? this.table : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.tableId = fieldSetFlags()[2] ? this.tableId : (java.lang.Integer) defaultValue(fields()[2]);
        record.txid = fieldSetFlags()[3] ? this.txid : (mypipe.avro.Guid) defaultValue(fields()[3]);
        record.timestamp = fieldSetFlags()[4] ? this.timestamp : (java.lang.Long) defaultValue(fields()[4]);
        record.id = fieldSetFlags()[5] ? this.id : (java.lang.Long) defaultValue(fields()[5]);
        record.obj_id = fieldSetFlags()[6] ? this.obj_id : (java.lang.Long) defaultValue(fields()[6]);
        record.obj_type = fieldSetFlags()[7] ? this.obj_type : (java.lang.Integer) defaultValue(fields()[7]);
        record.operater_id = fieldSetFlags()[8] ? this.operater_id : (java.lang.Long) defaultValue(fields()[8]);
        record.deal_time = fieldSetFlags()[9] ? this.deal_time : (java.lang.Long) defaultValue(fields()[9]);
        record.action_type = fieldSetFlags()[10] ? this.action_type : (java.lang.Integer) defaultValue(fields()[10]);
        record.action_reason = fieldSetFlags()[11] ? this.action_reason : (java.lang.Integer) defaultValue(fields()[11]);
        record.remarks = fieldSetFlags()[12] ? this.remarks : (java.lang.CharSequence) defaultValue(fields()[12]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AdminOperateLogInsert>
    WRITER$ = (org.apache.avro.io.DatumWriter<AdminOperateLogInsert>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AdminOperateLogInsert>
    READER$ = (org.apache.avro.io.DatumReader<AdminOperateLogInsert>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
